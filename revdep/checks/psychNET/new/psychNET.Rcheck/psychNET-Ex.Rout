
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "psychNET"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> options(pager = "console")
> library('psychNET')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("psychNET-package")
> ### * psychNET-package
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: psychNET-package
> ### Title: psychNET : Psychometric network modelling for multivariate time
> ###   series data.
> ### Aliases: psychNET-package
> ### Keywords: package
> 
> ### ** Examples
> 
> # Load the R package psychNET
> library(psychNET)
> 
> 
> 
> cleanEx()
> nameEx("psychNET")
> ### * psychNET
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: psychNET
> ### Title: Psychometric networks estimated by multivariate time series
> ###   methods.
> ### Aliases: psychNET
> 
> ### ** Examples
> 
> ## load the psychNET library
> library(psychNET)
> 
> ## load the Canada dataset from the 'vars' package
> data("Canada", package = "vars")
> Canada_data_frame <- data.frame(Canada)
> 
> ## fit a VAR model
> VAR_model <- psychNET(Canada_data_frame, model = "VAR", lag = 1, type = "const")
[35m[1m[3m
 See the documentation of the function ?VAR from the R package vars for details
[23m[22m[39m
[32m[3mBernhard Pfaff (2008). VAR, SVAR and SVEC Models: Implementation Within R Package vars. Journal of
  Statistical Software 27(4). URL http://www.jstatsoft.org/v27/i04/.
Pfaff, B. (2008) Analysis of Integrated and Cointegrated Time Series with R. Second Edition. Springer, New
      York. ISBN 0-387-27960-1
[23m[39m
> # print the result
> VAR_model

Call: psychNET(data = Canada_data_frame, model = "VAR", lag = 1, type = "const")

Time elapsed: 0.0005207022  minutes 

### Data: 
Number of persons: 1  
Number of symptoms: 4  
Time points per person: 84  
Missing values: FALSE  
Equidistant measurements: TRUE  


### Model: 
Model fitted: VAR  
Lag order: 1  


### Estimates: 
Moduli of the roots of the autoregressive companion matrix: 0.99 0.95 0.95 0.75 
Temporal network: TRUE  
Contemporaneous network: FALSE  

> # summarize the resulting network
> summary(VAR_model)
$contemporaneous
[1] "Not available"

$temporal
$temporal$global
                  lag_1
Transitivity      1.000
Resiprocity       1.000
Resiprocity_ratio 1.000
Mean_distance     1.000
Density           1.000
Diameter          0.274

$temporal$local
$temporal$local[[1]]
                               e   prod     rw     U
Transitivity               0.200  0.200  0.200 0.200
Transitivity_weight        1.261  1.383  1.119 0.050
Indegree                   3.000  3.000  3.000 3.000
Outdegree                  3.000  3.000  3.000 3.000
Degree                     6.000  6.000  6.000 6.000
Step-1 expected influence -0.042 -0.072 -0.030 0.652
Step-2 expected influence -0.176 -0.126  0.024 0.613
Betweeness                 0.000  0.000  3.000 0.000
Outcloseness               2.908  2.769  5.533 0.959
Incloseness                1.337  2.292  2.534 2.864



> # summarize the VAR model using the original summary method
> vars:::summary.varest(VAR_model$fit)

VAR Estimation Results:
========================= 
Endogenous variables: e, prod, rw, U 
Deterministic variables: const 
Sample size: 83 
Log Likelihood: -213.774 
Roots of the characteristic polynomial:
0.9928 0.9526 0.9526 0.7511
Call:
vars::VAR(y = res$CALL$pars$data_pre_fixed[, -no_sympt_index], 
    p = res$CALL$pars$lag, type = "const", exogen = res$CALL$pars$covariates)


Estimation results for equation e: 
================================== 
e = e.l1 + prod.l1 + rw.l1 + U.l1 + const 

          Estimate Std. Error t value Pr(>|t|)    
e.l1       1.17354    0.08196  14.319  < 2e-16 ***
prod.l1    0.14479    0.02741   5.282 1.13e-06 ***
rw.l1     -0.07905    0.02832  -2.791  0.00660 ** 
U.l1       0.52438    0.16574   3.164  0.00222 ** 
const   -192.56361   63.81154  -3.018  0.00344 ** 
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1


Residual standard error: 0.4798 on 78 degrees of freedom
Multiple R-Squared: 0.9973,	Adjusted R-squared: 0.9972 
F-statistic:  7304 on 4 and 78 DF,  p-value: < 2.2e-16 


Estimation results for equation prod: 
===================================== 
prod = e.l1 + prod.l1 + rw.l1 + U.l1 + const 

         Estimate Std. Error t value Pr(>|t|)    
e.l1      0.08710    0.11823   0.737    0.464    
prod.l1   1.01970    0.03955  25.785   <2e-16 ***
rw.l1    -0.02629    0.04085  -0.644    0.522    
U.l1      0.32299    0.23910   1.351    0.181    
const   -81.55110   92.05141  -0.886    0.378    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1


Residual standard error: 0.6921 on 78 degrees of freedom
Multiple R-Squared: 0.9746,	Adjusted R-squared: 0.9733 
F-statistic: 747.4 on 4 and 78 DF,  p-value: < 2.2e-16 


Estimation results for equation rw: 
=================================== 
rw = e.l1 + prod.l1 + rw.l1 + U.l1 + const 

         Estimate Std. Error t value Pr(>|t|)    
e.l1      0.06381    0.13481   0.473  0.63729    
prod.l1  -0.13551    0.04509  -3.005  0.00357 ** 
rw.l1     0.96873    0.04658  20.797  < 2e-16 ***
U.l1     -0.19538    0.27262  -0.717  0.47571    
const    11.61376  104.96033   0.111  0.91218    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1


Residual standard error: 0.7892 on 78 degrees of freedom
Multiple R-Squared: 0.9988,	Adjusted R-squared: 0.9988 
F-statistic: 1.681e+04 on 4 and 78 DF,  p-value: < 2.2e-16 


Estimation results for equation U: 
================================== 
U = e.l1 + prod.l1 + rw.l1 + U.l1 + const 

         Estimate Std. Error t value Pr(>|t|)    
e.l1     -0.19294    0.06129  -3.148 0.002331 ** 
prod.l1  -0.08087    0.02050  -3.944 0.000174 ***
rw.l1     0.07539    0.02118   3.559 0.000637 ***
U.l1      0.47531    0.12396   3.835 0.000254 ***
const   186.80892   47.72282   3.914 0.000193 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1


Residual standard error: 0.3588 on 78 degrees of freedom
Multiple R-Squared: 0.9524,	Adjusted R-squared:  0.95 
F-statistic: 390.5 on 4 and 78 DF,  p-value: < 2.2e-16 



Covariance matrix of residuals:
            e     prod       rw        U
e     0.23020  0.05311 -0.10293 -0.14055
prod  0.05311  0.47903  0.02617 -0.02913
rw   -0.10293  0.02617  0.62281  0.08092
U    -0.14055 -0.02913  0.08092  0.12875

Correlation matrix of residuals:
           e    prod      rw       U
e     1.0000  0.1599 -0.2718 -0.8164
prod  0.1599  1.0000  0.0479 -0.1173
rw   -0.2718  0.0479  1.0000  0.2857
U    -0.8164 -0.1173  0.2857  1.0000


> # plot the VAR model results using the original plot method
> vars:::plot.varest(VAR_model$fit)
> # plot the resulting network
> plot(VAR_model)
[[1]]
[[1]]$qgraph
From		To	Weight
2 	 --> 	 1 	 0.14 
3 	 --> 	 1 	 -0.08 
4 	 --> 	 1 	 0.52 
1 	 --> 	 2 	 0.09 
3 	 --> 	 2 	 -0.03 
4 	 --> 	 2 	 0.32 
1 	 --> 	 3 	 0.06 
2 	 --> 	 3 	 -0.14 
4 	 --> 	 3 	 -0.2 
1 	 --> 	 4 	 -0.19 
2 	 --> 	 4 	 -0.08 
3 	 --> 	 4 	 0.08 

[[1]]$igraph
IGRAPH fde0f52 DNW- 4 12 -- 
+ attr: name (v/c), weight (e/n), color (e/c)
+ edges from fde0f52 (vertex names):
 [1] e   ->prod e   ->rw   e   ->U    prod->e    prod->rw   prod->U   
 [7] rw  ->e    rw  ->prod rw  ->U    U   ->e    U   ->prod U   ->rw  


> 
> ## fit a sparse VAR model
> sparse_VAR_model <- psychNET(Canada_data_frame, model = "SVAR", lag = 1)
[35m[1m[3m
See the documentation of the functions ?fitVAR and ?fitVECM from the R package sparsevar for details
 [23m[22m[39m
[32m[3mSimone Vazzoler, Lorenzo Frattarolo and Monica Billio (2016). sparsevar: A Package for Sparse VAR/VECM
  Estimation. R package version 0.0.10. https://CRAN.R-project.org/package=sparsevar
[23m[39m
[31m
criterion argument has not been specified. It has been set automatically to 'CV'.
 [39m
[31m
penalty argument has not been specified.
 It has been set automatically to 'ENET'. Other options are 'SCAD' and 'MCP' when model='SVAR' or 'SVECM' [39m
> # print the result
> sparse_VAR_model

Call: psychNET(data = Canada_data_frame, model = "SVAR", lag = 1)

Time elapsed: 0.003122898  minutes 

### Data: 
Number of persons: 1  
Number of symptoms: 4  
Time points per person: 84  
Missing values: FALSE  
Equidistant measurements: TRUE  


### Model: 
Model fitted: SVAR  
Lag order: 1  
Penalty type: ENET  
Model selection criterion: CV  


### Estimates: 
Moduli of the roots of the autoregressive companion matrix: 0.99 0.93 0.93 0.01 
Temporal network: TRUE  
Sparsity of temporal network: 0.125  
Contemporaneous network: FALSE  

> # summarize the resulting network
> summary(sparse_VAR_model)
$contemporaneous
[1] "Not available"

$temporal
$temporal$global
                  lag_1
Transitivity      1.000
Resiprocity       0.800
Resiprocity_ratio 0.667
Mean_distance     1.167
Density           0.833
Diameter          0.119

$temporal$local
$temporal$local[[1]]
                               e   prod    rw     U
Transitivity               0.300  0.200 0.300 0.500
Transitivity_weight        1.529  1.156 0.915 1.671
Indegree                   2.000  3.000 2.000 3.000
Outdegree                  3.000  3.000 3.000 1.000
Degree                     5.000  6.000 5.000 4.000
Step-1 expected influence -0.301 -0.008 0.169 0.021
Step-2 expected influence -0.290 -0.066 0.170 0.020
Betweeness                 0.000  5.000 2.000 0.000
Outcloseness               1.918  3.508 5.904 3.457
Incloseness                3.266 24.133 3.234 1.644



> # plot the sparse VAR model results using the original plot method
> sparsevar::plotVAR(sparse_VAR_model$fit)
> # plot the resulting network
> plot(sparse_VAR_model)
[[1]]
[[1]]$qgraph
From		To	Weight
2 	 --> 	 1 	 0.14 
3 	 --> 	 1 	 0.01 
1 	 --> 	 2 	 -0.01 
3 	 --> 	 2 	 0.01 
4 	 --> 	 2 	 0.02 
1 	 --> 	 3 	 0.11 
2 	 --> 	 3 	 -0.09 
1 	 --> 	 4 	 -0.4 
2 	 --> 	 4 	 -0.06 
3 	 --> 	 4 	 0.15 

[[1]]$igraph
IGRAPH fe345f3 DNW- 4 10 -- 
+ attr: name (v/c), weight (e/n), color (e/c)
+ edges from fe345f3 (vertex names):
 [1] e   ->prod e   ->rw   e   ->U    prod->e    prod->rw   prod->U   
 [7] rw  ->e    rw  ->prod rw  ->U    U   ->prod


> 
> ## fit a sparse VAR model as the one in the 'bigtime' package
> sparse_lassVAR_model <- psychNET(Canada_data_frame, 
+ model = "SVARHL",penalty = "LASSO", lag = 1, VARgran=c(500,1000))
[35m[1m[3mSee the documentation of the functions ?sparseVAR ?sparseVARX, and ?sparseVARMA from the R package bigtime for details
 [23m[22m[39m
[32m[3mInes Wilms, David S. Matteson, Jacob Bien and Sumanta Basu (2017). bigtime: Sparse Estimation of Large Time
  Series Models. R package version 0.1.0. https://CRAN.R-project.org/package=bigtime
[23m[39m
[31m
criterion argument has not been specified. It has been set automatically to 'CV'. [39m
> # print the result
> sparse_lassVAR_model

Call: psychNET(data = Canada_data_frame, model = "SVARHL", lag = 1, 
    penalty = "LASSO", VARgran = c(500, 1000))

Time elapsed: 0.01379928  minutes 

### Data: 
Number of persons: 1  
Number of symptoms: 4  
Time points per person: 84  
Missing values: FALSE  
Equidistant measurements: TRUE  


### Model: 
Model fitted: SVARHL  
Lag order: 1  
Penalty type: L1  
Model selection criterion: CV  


### Estimates: 
Moduli of the roots of the autoregressive companion matrix: 0.98 0.88 0.59 0.06 
Temporal network: TRUE  
Sparsity of temporal network: 0.1875  
Contemporaneous network: FALSE  

> # summarize the resulting network
> summary(sparse_lassVAR_model)
$contemporaneous
[1] "Not available"

$temporal
$temporal$global
                  lag_1
Transitivity      1.000
Resiprocity       0.667
Resiprocity_ratio 0.500
Mean_distance     1.250
Density           0.750
Diameter          0.120

$temporal$local
$temporal$local[[1]]
                               e  prod    rw      U
Transitivity               0.200 0.500 0.500  0.500
Transitivity_weight        0.772 0.822 1.131  1.302
Indegree                   3.000 2.000 1.000  3.000
Outdegree                  3.000 2.000 3.000  1.000
Degree                     6.000 4.000 4.000  4.000
Step-1 expected influence -0.050 0.045 0.127 -0.010
Step-2 expected influence -0.039 0.039 0.124 -0.009
Betweeness                 3.000 0.000 3.000  2.000
Outcloseness               3.027 2.726 7.891  5.879
Incloseness                5.410 4.079 4.552  2.904



> # plot the resulting network
> plot(sparse_lassVAR_model)
[[1]]
[[1]]$qgraph
From		To	Weight
2 	 --> 	 1 	 0.13 
3 	 --> 	 1 	 0.05 
4 	 --> 	 1 	 -0.01 
1 	 --> 	 2 	 0.11 
3 	 --> 	 2 	 0.01 
1 	 --> 	 3 	 0.03 
1 	 --> 	 4 	 -0.19 
2 	 --> 	 4 	 -0.08 
3 	 --> 	 4 	 0.07 

[[1]]$igraph
IGRAPH feb9db9 DNW- 4 9 -- 
+ attr: name (v/c), weight (e/n), color (e/c)
+ edges from feb9db9 (vertex names):
[1] e   ->prod e   ->rw   e   ->U    prod->e    prod->U    rw  ->e    rw  ->prod
[8] rw  ->U    U   ->e   


> 
> 
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  5.43 0.56 6.12 NA NA 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
